<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/tx
	    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
        http://www.springframework.org/schema/aop
	    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">
    <context:property-placeholder  location="classpath:database.properties"/>
    <!--配置数据源-->
    <!--属性文件配置数据源-->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${driver}"/>
        <property name="url" value="${url}"/>
        <property name="username" value="${user}"/>
        <property name="password" value="${password}"/>
    </bean>
    <!--JNDI配置数据源-->
    <!--<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">-->
        <!--<property name="jndiName" value="java:comp/env/jdbc/smbms"/>-->
        <!--<property name="resourceRef" value="true"/>-->
    <!--</bean>-->
    <!--SqlSessionFactoryBean-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--引用数据源组件-->
        <property name="dataSource" ref="dataSource"/>
        <!--引用MyBatis配置文中的设置-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!--配置SQL映射文件信息-->
        <property name="mapperLocations">
            <list>
                <value>classpath:cn/smbms/dao/**/*.xml</value>
            </list>
        </property>
       <!--配置别名-->
        <property name="typeAliasesPackage" value="cn.smbms.pojo" />
    </bean>
    <!-- dao
	MapperScannerConfigurer 自动生成dao的实现类-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="cn.smbms.dao"></property>
    </bean>
    <!-- service -->
    <context:component-scan base-package="cn.smbms.service"></context:component-scan>
    <!--配置声明式事务-->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--通过</tx:advice>标签为指定的事务管理器设置事务属性-->
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <!--定义属性,声明事务规则-->
        <tx:attributes>
            <tx:method name="tx_*" propagation="REQUIRED"/>
            <tx:method name="*" propagation="SUPPORTS"/>

            <tx:method name="find*" read-only="true" />
            <tx:method name="*" />
        </tx:attributes>
    </tx:advice>
    <!--定义切面-->
    <aop:config>
        <!--定义切点-->
        <aop:pointcut id="serviceMethod" expression="execution(* cn.smbms.service..*.*(..))"/>
        <!--将事务增强与切入点组合-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethod"/>
    </aop:config>
</beans>